//Реализуйте простую модель многопользовательского чата, где несколько пользователей могут отправлять сообщения в общий канал.
//Каждое сообщение должно содержать имя отправителя и текст сообщения. Создайте несколько горутин для имитации пользователей, которые отправляют сообщения.
package main

import (
    "fmt"
    "sync"
    "time"
)

func main() {
    // Канал для сообщений
    messages := make(chan string)

    var wg sync.WaitGroup

    // Функция-имитатор пользователя
    // userName - имя пользователя, count - сколько сообщений он отправит
    user := func(userName string, count int) {
        defer wg.Done()
        for i := 1; i <= count; i++ {
            msg := fmt.Sprintf("[%s]: Message %d from %s", userName, i, userName)
            messages <- msg
            time.Sleep(50 * time.Millisecond) // небольшая пауза для наглядности
        }
    }

    // Запустим нескольких "пользователей"
    wg.Add(3)
    go user("User1", 5)
    go user("User2", 5)
    go user("User3", 5)

    // В отдельной горутине дождёмся окончания отправки сообщений и закроем канал
    go func() {
        wg.Wait()
        close(messages)
    }()

    // Читаем сообщения из канала и выводим на экран
    for msg := range messages {
        fmt.Println(msg)
    }
}


// Tсть общий канал для сообщений. Несколько горутин-«пользователей» отправляют сообщения в этот канал, а главная горутина читает и выводит их на экран.
